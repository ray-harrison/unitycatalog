name: MinIO Integration Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'server/src/main/java/io/unitycatalog/server/service/credential/**'
      - 'server/src/main/java/io/unitycatalog/server/utils/ServerProperties.java'
      - 'examples/cli/src/main/java/io/unitycatalog/cli/**'
      - 'tests/integration/minio/**'
      - '.github/workflows/minio-integration-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'server/src/main/java/io/unitycatalog/server/service/credential/**'
      - 'server/src/main/java/io/unitycatalog/server/utils/ServerProperties.java'
      - 'examples/cli/src/main/java/io/unitycatalog/cli/**'
      - 'tests/integration/minio/**'
      - '.github/workflows/minio-integration-tests.yml'

jobs:
  minio-integration:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        java-version: [11, 17]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache SBT dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
          ~/.cache/coursier
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
        restore-keys: |
          ${{ runner.os }}-sbt-
    
    - name: Install Python dependencies
      run: |
        pip install pyspark==3.5.3 requests pytest
    
    - name: Build Unity Catalog
      run: |
        ./build/sbt clean compile
        ./build/sbt "project cli" compile
    
    - name: Start MinIO
      run: |
        cd tests/integration/minio
        docker compose up -d
        # Wait for MinIO to be healthy
        timeout 60 bash -c 'until docker compose ps | grep -q "healthy"; do sleep 2; done'
        docker compose ps
    
    - name: Run CLI Integration Tests
      run: |
        cd tests/integration/minio
        chmod +x test_cli_operations.sh
        ./test_cli_operations.sh
      env:
        UC_HOME: ${{ github.workspace }}
    
    - name: Run Spark Integration Tests
      run: |
        cd tests/integration/minio
        python3 test_spark_operations.py
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Upload test logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-logs-java${{ matrix.java-version }}
        path: |
          /tmp/uc-server.log
          /tmp/uc-minio-tests/*.log
          tests/integration/minio/docker-compose.logs
    
    - name: Docker logs
      if: failure()
      run: |
        cd tests/integration/minio
        docker compose logs > docker-compose.logs
        cat docker-compose.logs
    
    - name: Cleanup
      if: always()
      run: |
        cd tests/integration/minio
        docker compose down -v
        pkill -f unity-catalog-server || true